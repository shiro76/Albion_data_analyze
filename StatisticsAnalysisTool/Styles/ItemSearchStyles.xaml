<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:models="clr-namespace:StatisticsAnalysisTool.Models"
                    xmlns:controls="clr-namespace:StatisticsAnalysisTool.Common.Controls"
                    xmlns:enum="clr-namespace:StatisticsAnalysisTool.Enumerations"
                    xmlns:glob="clr-namespace:System.Globalization;assembly=System.Runtime">

    <Style x:Key="ItemSearchTextBoxStyle" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Margin" Value="10,10,0,0" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="220" />
    </Style>

    <DataTemplate x:Key="ItemSearch.GridViewColumnIconTemplate"  DataType="{x:Type models:Item}">
        <Grid>
            <Image Source="{Binding Icon, IsAsync=True, Mode=OneWay}" Width="75" Height="75" Stretch="Fill" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ItemSearch.GridViewColumnNameTemplate" DataType="{x:Type models:Item}">
        <Grid Width="400">
            <StackPanel Orientation="Vertical">
                <TextBlock TextWrapping="Wrap" Text="{Binding LocalizedNameAndEnglish}" />
                <StackPanel Orientation="Horizontal">
                    <Image Source="../Resources/silver.png" Width="12" Height="12" ToolTip="{Binding TranslationEstMarketValue, IsAsync=True, Mode=OneWay}" />
                    <Label Content="{Binding AverageEstQualityValue, IsAsync=True, Mode=OneWay, StringFormat=N0, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}" 
                           ToolTip="{Binding LastEstimatedUpdateTimeString, IsAsync=True, Mode=OneWay}">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.Text.6}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding EstimatedMarketValueStatus, IsAsync=True}" Value="{x:Static enum:PastTime.VeryVeryOld}">
                                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.TimeValue.PastTime.7}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding EstimatedMarketValueStatus, IsAsync=True}" Value="{x:Static enum:PastTime.VeryOld}">
                                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.TimeValue.PastTime.6}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding EstimatedMarketValueStatus, IsAsync=True}" Value="{x:Static enum:PastTime.Old}">
                                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.TimeValue.PastTime.5}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding EstimatedMarketValueStatus, IsAsync=True}" Value="{x:Static enum:PastTime.BitOld}">
                                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.TimeValue.PastTime.4}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding EstimatedMarketValueStatus, IsAsync=True}" Value="{x:Static enum:PastTime.LittleNew}">
                                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.TimeValue.PastTime.3}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding EstimatedMarketValueStatus, IsAsync=True}" Value="{x:Static enum:PastTime.AlmostNew}">
                                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.TimeValue.PastTime.2}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding EstimatedMarketValueStatus, IsAsync=True}" Value="{x:Static enum:PastTime.New}">
                                        <Setter Property="Foreground" Value="{StaticResource SolidColorBrush.TimeValue.PastTime.1}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </StackPanel>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ItemSearch.GridViewColumnAlertMinSellPriceTemplate"  DataType="{x:Type models:Item}">
        <Grid>
            <controls:DigitsTextBox Text="{Binding AlertModeMinSellPriceIsUndercutPrice}" MaxLength="12" Height="24" Width="65" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ItemSearch.GridViewColumnFavoriteTemplate"  DataType="{x:Type models:Item}">
        <Grid>
            <CheckBox IsChecked="{Binding IsFavorite}" />
        </Grid>
    </DataTemplate>

</ResourceDictionary>